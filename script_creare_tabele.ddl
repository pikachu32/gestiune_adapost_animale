-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-12-21 23:44:59 EET
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE adoptatori (
    id_adoptator   NUMBER NOT NULL,
    nume_adoptator VARCHAR2(40) NOT NULL,
    adresa         VARCHAR2(60),
    telefon        VARCHAR2(15) NOT NULL,
    id_animal      NUMBER NOT NULL
);

ALTER TABLE adoptatori
    ADD CONSTRAINT adoptatori_nume_adoptator_ck CHECK ( REGEXP_LIKE ( nume_adoptator,
                                                                      '[a-zA-Z -]+$' ) );

ALTER TABLE adoptatori
    ADD CONSTRAINT adoptatori_adresa_ck CHECK ( REGEXP_LIKE ( adresa,
                                                              '[a-zA-Z0-9,. ]+$' ) );

ALTER TABLE adoptatori
    ADD CONSTRAINT adoptatori_telefon_ck CHECK ( REGEXP_LIKE ( telefon,
                                                               '[0-9 ()-+]' ) );

CREATE UNIQUE INDEX adoptatori__idx ON
    adoptatori (
        id_animal
    ASC );

ALTER TABLE adoptatori ADD CONSTRAINT adoptatori_pk PRIMARY KEY ( id_adoptator );

ALTER TABLE adoptatori ADD CONSTRAINT adoptatori_telefon_un UNIQUE ( telefon );

ALTER TABLE adoptatori ADD CONSTRAINT adoptatori_nume_tel_un UNIQUE ( nume_adoptator,
                                                                      telefon );

CREATE TABLE animale (
    id_animal    NUMBER NOT NULL,
    nume_animal  VARCHAR2(30) NOT NULL,
    specie       VARCHAR2(20) NOT NULL,
    varsta       NUMBER,
    sex          VARCHAR2(8),
    stare_animal VARCHAR2(10),
    id_angajat   NUMBER NOT NULL
);

ALTER TABLE animale
    ADD CONSTRAINT animale_nume_animal_ck CHECK ( REGEXP_LIKE ( nume_animal,
                                                                '^[a-zA-Z ]+$' ) );

ALTER TABLE animale
    ADD CONSTRAINT animale_specie_ck CHECK ( REGEXP_LIKE ( specie,
                                                           '[a-zA-Z ]+$' ) );

ALTER TABLE animale ADD CONSTRAINT animale_varsta_ck CHECK ( varsta > 0 );

ALTER TABLE animale
    ADD CONSTRAINT animale_sex_ck CHECK ( sex IN ( 'feminin', 'masculin' ) );

ALTER TABLE animale ADD CONSTRAINT animale_pk PRIMARY KEY ( id_animal );

ALTER TABLE animale ADD CONSTRAINT animale_nume_animal_un UNIQUE ( nume_animal );

CREATE TABLE personal_adapost (
    id_angajat   NUMBER NOT NULL,
    nume_angajat VARCHAR2(40) NOT NULL,
    functie      VARCHAR2(20) NOT NULL,
    telefon      VARCHAR2(15) NOT NULL
);

ALTER TABLE personal_adapost
    ADD CONSTRAINT personal_nume_angajat_ck CHECK ( REGEXP_LIKE ( nume_angajat,
                                                                  '[a-zA-Z -]+$' ) );

ALTER TABLE personal_adapost
    ADD CONSTRAINT personal_adapost_functie_ck CHECK ( REGEXP_LIKE ( functie,
                                                                     '[a-zA-Z -]+$' ) );

ALTER TABLE personal_adapost
    ADD CONSTRAINT personal_adapost_telefon_ck CHECK ( REGEXP_LIKE ( telefon,
                                                                     '[0-9 ()-+]' ) );

ALTER TABLE personal_adapost ADD CONSTRAINT personal_adapost_pk PRIMARY KEY ( id_angajat );

ALTER TABLE personal_adapost ADD CONSTRAINT personal_nume_un UNIQUE ( nume_angajat );

ALTER TABLE personal_adapost ADD CONSTRAINT personal_adapost_telefon_un UNIQUE ( telefon );

CREATE TABLE sarcini_angajati (
    id_sarcina        NUMBER NOT NULL,
    descriere_sarcina VARCHAR2(60),
    data_alocarii     DATE,
    deadline          DATE,
    id_angajat        NUMBER NOT NULL
);

ALTER TABLE sarcini_angajati ADD CONSTRAINT sarcini_angajati_pk PRIMARY KEY ( id_sarcina );


CREATE OR REPLACE TRIGGER trg_sarcini_angajati_before_insert
BEFORE INSERT ON sarcini_angajati
FOR EACH ROW
BEGIN
    IF :new.Deadline <= SYSDATE THEN
        RAISE_APPLICATION_ERROR(-20001, 'Data invalida: ' || TO_CHAR(:new.Deadline, 'DD.MM.YYYY HH24:MI:SS') || ' trebuie sa fie mai mare decat data curenta.');
    END IF;

    IF :new.Data_Alocarii <= SYSDATE THEN
        RAISE_APPLICATION_ERROR(-20001, 'Data invalida: ' || TO_CHAR(:new.Data_Alocarii, 'DD.MM.YYYY HH24:MI:SS') || ' trebuie sa fie mai mare decat data curenta.');
    END IF;
END;
/

CREATE OR REPLACE TRIGGER trg_sarcini_angajati_before_update
BEFORE UPDATE ON sarcini_angajati
FOR EACH ROW
BEGIN
    IF :new.Deadline <= SYSDATE THEN
        RAISE_APPLICATION_ERROR(-20001, 'Data invalida: ' || TO_CHAR(:new.Deadline, 'DD.MM.YYYY HH24:MI:SS') || ' trebuie sa fie mai mare decat data curenta.');
    END IF;

    IF :new.Data_Alocarii <= SYSDATE THEN
        RAISE_APPLICATION_ERROR(-20001, 'Data invalida: ' || TO_CHAR(:new.Data_Alocarii, 'DD.MM.YYYY HH24:MI:SS') || ' trebuie sa fie mai mare decat data curenta.');
    END IF;
END;
/


CREATE TABLE veterinari (
    id_veterinar   NUMBER NOT NULL,
    nume_veterinar VARCHAR2(40) NOT NULL,
    specializare   VARCHAR2(20),
    experienta     VARCHAR2(6),
    telefon        VARCHAR2(15) NOT NULL
);

ALTER TABLE veterinari
    ADD CONSTRAINT veterinari_nume_ck CHECK ( REGEXP_LIKE ( nume_veterinar,
                                                            '[a-zA-Z -]+$' ) );

ALTER TABLE veterinari
    ADD CONSTRAINT veterinari_specializare_ck CHECK ( REGEXP_LIKE ( specializare,
                                                                    '[a-zA-Z -]+$' ) );

ALTER TABLE veterinari
    ADD CONSTRAINT veterinari_experienta_ck CHECK ( REGEXP_LIKE ( experienta,
                                                                  '[a-zA-Z 0-9><~]+$' ) );

ALTER TABLE veterinari
    ADD CONSTRAINT veterinari_telefon_ck CHECK ( REGEXP_LIKE ( telefon,
                                                               '[0-9 ()-+]' ) );

ALTER TABLE veterinari ADD CONSTRAINT veterinari_pk PRIMARY KEY ( id_veterinar );

ALTER TABLE veterinari ADD CONSTRAINT veterinari_nume_veterinar_un UNIQUE ( nume_veterinar );

ALTER TABLE veterinari ADD CONSTRAINT veterinari_telefon_un UNIQUE ( telefon );

CREATE TABLE vizite_veterinar (
    animale_id_animal       NUMBER NOT NULL,
    veterinari_id_veterinar NUMBER NOT NULL,
    id_vizita               NUMBER NOT NULL,
    data_vizitei            DATE,
    diagnostic              VARCHAR2(40),
    tratament               VARCHAR2(60)
);

ALTER TABLE vizite_veterinar ADD CONSTRAINT vizite_veterinare_pk PRIMARY KEY ( animale_id_animal,
                                                                               veterinari_id_veterinar );

ALTER TABLE adoptatori
    ADD CONSTRAINT adoptatori_animale_fk FOREIGN KEY ( id_animal )
        REFERENCES animale ( id_animal );

ALTER TABLE animale
    ADD CONSTRAINT personal_adapost_animale_fk FOREIGN KEY ( id_angajat )
        REFERENCES personal_adapost ( id_angajat );

ALTER TABLE sarcini_angajati
    ADD CONSTRAINT personal_sarcinii_fk FOREIGN KEY ( id_angajat )
        REFERENCES personal_adapost ( id_angajat );

ALTER TABLE vizite_veterinar
    ADD CONSTRAINT vizite_veterinar_veterinari_fk FOREIGN KEY ( veterinari_id_veterinar )
        REFERENCES veterinari ( id_veterinar );

ALTER TABLE vizite_veterinar
    ADD CONSTRAINT vizite_veterinare_animale_fk FOREIGN KEY ( animale_id_animal )
        REFERENCES animale ( id_animal );

CREATE SEQUENCE adoptatori_id_adoptator_seq START WITH 1 NOCACHE ORDER;

CREATE SEQUENCE animale_id_animal_seq START WITH 1 NOCACHE ORDER;

CREATE SEQUENCE personal_adapost_id_angajat START WITH 1 NOCACHE ORDER;

CREATE SEQUENCE sarcini_angajati_id_sarcina START WITH 1 NOCACHE ORDER;

CREATE SEQUENCE veterinari_id_veterinar_seq START WITH 1 NOCACHE ORDER;

CREATE SEQUENCE vizite_veterinar_id_vizita_seq START WITH 1 NOCACHE ORDER;



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             6
-- CREATE INDEX                             1
-- ALTER TABLE                             32
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          6
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
